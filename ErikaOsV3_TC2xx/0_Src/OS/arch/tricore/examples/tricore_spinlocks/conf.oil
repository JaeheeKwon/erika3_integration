/* ###*B*###
 * Erika Enterprise, version 3
 * 
 * Copyright (C) 2017 - 2018 Evidence s.r.l.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License, version 2, for more details.
 * 
 * You should have received a copy of the GNU General Public License,
 * version 2, along with this program; if not, see
 * < www.gnu.org/licenses/old-licenses/gpl-2.0.html >.
 * 
 * This program is distributed to you subject to the following
 * clarifications and special exceptions to the GNU General Public
 * License, version 2.
 * 
 * THIRD PARTIES' MATERIALS
 * 
 * Certain materials included in this library are provided by third
 * parties under licenses other than the GNU General Public License. You
 * may only use, copy, link to, modify and redistribute this library
 * following the terms of license indicated below for third parties'
 * materials.
 * 
 * In case you make modified versions of this library which still include
 * said third parties' materials, you are obligated to grant this special
 * exception.
 * 
 * The complete list of Third party materials allowed with ERIKA
 * Enterprise version 3, together with the terms and conditions of each
 * license, is present in the file THIRDPARTY.TXT in the root of the
 * project.
 * ###*E*### */

/** \file  conf.oil
 *  \brief  System Configuration.
 *
 *  This file contains the System Configuration for Erika Enterprise.
 *
 *  \author  Errico Guidieri
 *  \date  2018
 */

CPU mySystem {

  OS myOs {

    /* EE_OPT = "OS_EE_VERBOSE"; */
    EE_OPT = "OSEE_DEBUG";
    EE_OPT = "OS_EE_APPL_BUILD_DEBUG";
    EE_OPT = "OS_EE_BUILD_DEBUG";

    USERESSCHEDULER = FALSE;

    CPU_DATA = TRICORE {
      CPU_CLOCK = 200.0;
      COMPILER = GCC;
    };

    CPU_DATA = TRICORE {
      ID = 1;
    };

    CPU_DATA = TRICORE {
      ID = 2;
    };

    KERNEL_TYPE = OSEK {
      CLASS = BCC1;
    };
  };

  APPDATA tricore_stack_monitoring {
    APP_SRC = "code.c";
  };

  TASK TaskMaster {
    PRIORITY = 1;
    AUTOSTART = TRUE;
  };

  TASK TaskSlave1 {
    CPU_ID = 1;
    PRIORITY = 1;
  };

  TASK TaskSlave2 {
    CPU_ID = 2;
    PRIORITY = 1;
    AUTOSTART = TRUE;
  };

  SPINLOCK spinlock_1 { NEXT_SPINLOCK=spinlock_2; };
  SPINLOCK spinlock_2 {};
};

